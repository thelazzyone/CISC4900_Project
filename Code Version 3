import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import tensorflow as tf

'''
https://stackabuse.com/k-nearest-neighbors-algorithm-in-python-and-scikit-learn/

Test:
    Before edit: 4231 rows × 34 columns
    After edit: 4168 rows × 34 columns

Train:
    Before edit: 16927 rows × 34 columns
    After edit: 16680 rows × 34 columns

'''

import os
print(os.listdir(r"C:\Users\eddie\OneDrive\Desktop\CISC 4900"))         #print out what's in the file/directory

train = pd.read_csv(r"C:\Users\eddie\OneDrive\Desktop\CISC 4900\Train_featMat_Clean.csv")
test = pd.read_csv(r"C:\Users\eddie\OneDrive\Desktop\CISC 4900\featMatVersion2_5.csv")


#print
train.head()

#describe the column
train.describe()

#print out the lables/column and there datatype
train.dtypes


#prints the selected columns
train_knn = train[['User_ID', 'Doc_ID', 'Phone_ID', 'Ratio dist and length of trajectory', 'Average velocity', 'Phone orientation']]
train_knn.head()

#display the dtype of the select column
train_knn.dtypes


'''
Choosing a specific columns to use for now
'''
#prints the selected columns
train_knn = train[['User_ID', 'Doc_ID', 'Phone_ID', 'Ratio dist and length of trajectory', 'Average velocity', 'Phone orientation']]
train_knn.head()


#The X variable contains the first five columns of the dataset (i.e. attributes) while y contains the labels.
X = train_knn.iloc[:, :-1].values
y = train_knn.iloc[:, :].values


#Train and test split
#80% train, 20% test

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)


#Feature Scaling
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)

X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)


#Error on "classifier.fit()
#Training and Prediction
from sklearn.neighbors import KNeighborsClassifier
classifier = KNeighborsClassifier(n_neighbors=5)
classifier.fit(X_train, y_train)
